/**
 * 
 */
package anderson.tankwar;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.*;

@SuppressWarnings("serial")
public class TankClient extends Frame {

	public static final int WIDTH = 300;
	public static final int HIGHT = 400;
	public Tank myTank=new Tank(50,50,this);
	public java.util.List<Missile> m=new ArrayList<Missile>();
	Image offScreenImage = null;

	@Override
	public void paint(Graphics g) {
		for(Missile missile:m){
			missile.draw(g);
		}
		myTank.draw(g);
	}

	@Override
	public void update(Graphics g) {
		if (offScreenImage == null) {
			offScreenImage = this.createImage(WIDTH, HIGHT);
		}
		Graphics gOffScreen = offScreenImage.getGraphics();
		Color c = gOffScreen.getColor();
		gOffScreen.setColor(Color.BLACK);
		gOffScreen.fillRect(0, 0, WIDTH, HIGHT);
		gOffScreen.setColor(c);
		paint(gOffScreen);
		g.drawImage(offScreenImage, 0, 0, null);
	}

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO 自动生成的方法存根
		TankClient tc = new TankClient();
		tc.launchFrame();

	}

	private void launchFrame() {
		// TODO 自动生成的方法存根
		this.setTitle("Tank War--Client");
		this.setLocation(WIDTH / 2, HIGHT / 2);
		this.setSize(WIDTH, HIGHT);
		this.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent arg0) {
				System.exit(0);
			}

		});
		this.setResizable(false);
		this.setVisible(true);
		this.addKeyListener(new KeyMonitor());
		new Thread(new PaintThread()).start();

	}

	private class PaintThread implements Runnable {

		@Override
		public void run() {
			try {
				while (true) {
					repaint();
					Thread.sleep(50);
				}
			} catch (InterruptedException e) {
				// TODO 自动生成的 catch 块
				e.printStackTrace();
			}
		}

	}
	/**
	 * listen key press action and tank move
	 * @author lenovo
	 *
	 */
	private class KeyMonitor extends KeyAdapter{

		@Override
		public void keyReleased(KeyEvent arg0) {
			myTank.keyReleased(arg0);
		}

		@Override
		public void keyPressed(KeyEvent arg0) {
			myTank.keyPressed(arg0);
		}

	}

}
